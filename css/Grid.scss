@import "Breakpoint";

$Grid-base-max-width: 1230px;
$Grid-number-of-columns: 12;
$Grid-base-gutter-size: 30px;
$Grid-base-column-max-width: 75px;

$Grid-breakpoints: (
  Desktop: (1230px, 9999px, 12, 75px, 30px),
  SmallDesktop: (1125px, 1230px, 10, 75px, 25px),
  LargeTablet: (1020px, 1125px, 10, 70px, 23px),
  SmallTablet: (810px, 1020px, 8, 60px, 20px)
);


@each $breakpoint-list, $breakpoint in $Grid-breakpoints {
  $breakpoint-min: nth($breakpoint, 1);
  $breakpoint-max: nth($breakpoint, 2);
  $breakpoint-columns: nth($breakpoint, 3);

  $Grid-max-width: $breakpoint-min;
  $Grid-column-max-width: nth($breakpoint, 4);
  $Grid-gutter-size: nth($breakpoint, 5);


  @media screen and (min-width: $breakpoint-min) and (max-width: $breakpoint-max) {
    .Grid {
      position: relative;

      width: 100%;
      @if $Grid-base-max-width <= $Grid-max-width {
        max-width: $Grid-max-width;
      } @else {
        max-width: 100%;
      }
      margin: 0 auto;
    }

    .Grid-column,
    .Grid-backgroundColumn {
      display: inline-block;

      width: 100%;
      max-width: $Grid-column-max-width;

      &:not(:last-child) {
        margin-right: $Grid-gutter-size;
      }
    }

    .Grid-backgroundColumn {
      position: absolute;
    }

    .Grid.Grid--1ColumnOffset {
      @if $Grid-base-max-width <= $Grid-max-width {
        padding: 0 ($Grid-column-max-width + $Grid-gutter-size)
      } @else {
        padding: 0 $Grid-base-gutter-size;
      }
    }

    @for $i from 2 through $Grid-number-of-columns {
      .Grid-#{$i}columns,
      .Grid-#{$i}BackgroundColumns {
        display: inline-block;

        width: 100%;
        max-width: calc(calc(#{$Grid-column-max-width} * #{$i}) +
                   calc(#{$Grid-gutter-size} * calc(#{$i} - 1)));

        vertical-align: top;

        &:not(:last-child) {
          margin-right: $Grid-gutter-size;
        }
      }

      .Grid.Grid--#{$i}ColumnsOffset {
        @if $Grid-base-max-width <= $Grid-max-width {
          padding: 0 calc(calc(#{$Grid-column-max-width} * #{$i}) +
                      calc(#{$Grid-gutter-size} * calc(#{$i} - 1)));
        } @else {
          padding: 0 $Grid-gutter-size;
        }
      }

      @for $s from -$Grid-number-of-columns through $Grid-number-of-columns {
        .Grid-#{$i}BackgroundColumns.left-#{$s}Columns{
          position: absolute;

          top: 0;
          left: calc(calc(#{$Grid-column-max-width} * #{$s}) +
                     calc(#{$Grid-gutter-size} * #{$s}));

          margin: 0;

          z-index: 0;
        }

        .Grid-#{$i}BackgroundColumns.right-#{$s}Columns {
          position: absolute;

          top: 0;
          right: calc(calc(#{$Grid-column-max-width} * #{$s}) +
                     calc(#{$Grid-gutter-size} * #{$s}));

         margin: 0;

          z-index: 0;
        }
      }
    }
  };
}
